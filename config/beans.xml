<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd"
     default-lazy-init="true">

	<context:component-scan base-package="com.sizatn.springkafka"/>
	
	<bean id="consumerProperties" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="bootstrap.servers" value="68.32.96.148:9092" />
				<entry key="group.id" value="flink3" />
				<entry key="enable.auto.commit" value="true" />
				<entry key="auto.commit.interval.ms" value="60000" />
				<entry key="auto.offset.reset" value="earliest" />
				<entry key="session.timeout.ms" value="30000" />
				<entry key="key.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer" />
				<entry key="value.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer" />
			</map>
		</constructor-arg>
	</bean>

	<bean id="consumerFactory" class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
		<constructor-arg ref="consumerProperties" />
	</bean>

	<bean id="messageListernerConsumerService" class="com.sizatn.springkafka.kafka.KafkaConsumerServer" />

	<bean id="containerProperties" class="org.springframework.kafka.listener.config.ContainerProperties">
		<constructor-arg value="bayonet" />
		<property name="messageListener" ref="messageListernerConsumerService" />
	</bean>

	<bean id="messageListenerContainer" class="org.springframework.kafka.listener.KafkaMessageListenerContainer" init-method="doStart">
		<constructor-arg ref="consumerFactory" />
		<constructor-arg ref="containerProperties" />
		<property name="autoStartup" value="true" />
	</bean>
	
</beans>